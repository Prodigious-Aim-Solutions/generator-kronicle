// Generated by CoffeeScript 1.7.1
(function() {
  var ArrayDataSource,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ArrayDataSource = (function() {
    function ArrayDataSource(data) {
      this.data = data != null ? data : [];
      this._find = __bind(this._find, this);
      this.get = __bind(this.get, this);
      this.remove = __bind(this.remove, this);
      this.update = __bind(this.update, this);
      this.create = __bind(this.create, this);
      this.login = __bind(this.login, this);
      return this;
    }

    ArrayDataSource.prototype.login = function(user, pass, cb) {
      return this;
    };

    ArrayDataSource.prototype.create = function(item, cb) {
      this.data.push(item);
      if (cb != null) {
        cb();
      }
      return this;
    };

    ArrayDataSource.prototype.update = function(item, cb) {
      var index;
      index = this._find(item);
      if (index === !-1) {
        return this.data[index] = item;
      }
      return false;
    };

    ArrayDataSource.prototype.remove = function(item, cb) {
      var index;
      index = this._find(item);
      if (index === !-1) {
        return this.data.splice(index, 1);
      }
      return false;
    };

    ArrayDataSource.prototype.get = function(item, cb) {
      var index;
      index = this._find(item);
      if (item && index === !-1) {
        return this.data[index];
      } else if (!item) {
        return this.data;
      }
      return false;
    };

    ArrayDataSource.prototype._find = function(item) {
      var dataItem, index, _i, _len, _ref;
      _ref = this.data;
      for (dataItem = _i = 0, _len = _ref.length; _i < _len; dataItem = ++_i) {
        index = _ref[dataItem];
        if (dataItem.id === item) {
          return index;
        }
      }
      return -1;
    };

    return ArrayDataSource;

  })();

  window.ArrayDataSource = ArrayDataSource;

}).call(this);
